/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import java.io.FileWriter;
import java.io.PrintWriter;

import java.util.ArrayList;
import excepciones.Errores;


import interprete.*;

/**
 *
 * @author mario
 */
public class Interfaz extends javax.swing.JFrame {

    private static int contadorVentanas = 0;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        setTitle("Ventana #"+""+(contadorVentanas++));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem8 = new javax.swing.JMenuItem();
        EntradaText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Entrada = new javax.swing.JTextArea();
        ConsolaText = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Salida = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo_button = new javax.swing.JMenu();
        NuevoArchivo_button = new javax.swing.JMenuItem();
        AbrirArchivo_button = new javax.swing.JMenuItem();
        GuardarArchivo_button = new javax.swing.JMenuItem();
        Pestania_button = new javax.swing.JMenu();
        NewPestania_button = new javax.swing.JMenuItem();
        DeletePestania_button = new javax.swing.JMenuItem();
        Run_button = new javax.swing.JMenu();
        Go_button = new javax.swing.JMenuItem();
        Reporte_button = new javax.swing.JMenu();
        Error_button = new javax.swing.JMenuItem();
        AST_button = new javax.swing.JMenuItem();
        SymbolsTable_button = new javax.swing.JMenuItem();

        jMenuItem8.setText("jMenuItem8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        EntradaText.setText("Entrada");

        Entrada.setColumns(20);
        Entrada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Entrada.setRows(5);
        jScrollPane1.setViewportView(Entrada);

        ConsolaText.setText("Consola");

        Salida.setEditable(false);
        Salida.setColumns(20);
        Salida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Salida.setRows(5);
        jScrollPane4.setViewportView(Salida);

        Archivo_button.setText("Archivo");

        NuevoArchivo_button.setText("Nuevo Archivo");
        NuevoArchivo_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoArchivo_buttonActionPerformed(evt);
            }
        });
        Archivo_button.add(NuevoArchivo_button);

        AbrirArchivo_button.setText("Abrir Archivo");
        AbrirArchivo_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirArchivo_buttonActionPerformed(evt);
            }
        });
        Archivo_button.add(AbrirArchivo_button);

        GuardarArchivo_button.setText("Guardar Archivo");
        GuardarArchivo_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarArchivo_buttonActionPerformed(evt);
            }
        });
        Archivo_button.add(GuardarArchivo_button);

        jMenuBar1.add(Archivo_button);

        Pestania_button.setText("Pestañas");

        NewPestania_button.setText("Nueva Pestaña");
        NewPestania_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewPestania_buttonActionPerformed(evt);
            }
        });
        Pestania_button.add(NewPestania_button);

        DeletePestania_button.setText("Eliminar Pestaña");
        DeletePestania_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePestania_buttonActionPerformed(evt);
            }
        });
        Pestania_button.add(DeletePestania_button);

        jMenuBar1.add(Pestania_button);

        Run_button.setText("Ejecutar");

        Go_button.setText("Iniciar");
        Go_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Go_buttonActionPerformed(evt);
            }
        });
        Run_button.add(Go_button);

        jMenuBar1.add(Run_button);

        Reporte_button.setText("Reportes");

        Error_button.setText("Reporte Errores");
        Error_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Error_buttonActionPerformed(evt);
            }
        });
        Reporte_button.add(Error_button);

        AST_button.setText("Generar AST");
        AST_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AST_buttonActionPerformed(evt);
            }
        });
        Reporte_button.add(AST_button);

        SymbolsTable_button.setText("Tabla de Simbolos");
        SymbolsTable_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymbolsTable_buttonActionPerformed(evt);
            }
        });
        Reporte_button.add(SymbolsTable_button);

        jMenuBar1.add(Reporte_button);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EntradaText))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConsolaText))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EntradaText)
                    .addComponent(ConsolaText))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private File archivoActual = null;

    private void NuevoArchivo_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoArchivo_buttonActionPerformed
        // TODO add your handling code here:
        Entrada.setText("");
        Salida.setText("");
        archivoActual = null;
    }//GEN-LAST:event_NuevoArchivo_buttonActionPerformed

    private void AbrirArchivo_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirArchivo_buttonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(null);
        if(seleccion == JFileChooser.APPROVE_OPTION){
            archivoActual = fileChooser.getSelectedFile();
            Path ruta = Paths.get(archivoActual.getAbsolutePath());
            
            try{
                String contenido = new String(Files.readAllBytes(ruta));
                Entrada.setText(contenido);
            }catch(IOException e){
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_AbrirArchivo_buttonActionPerformed

    private void DeletePestania_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePestania_buttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_DeletePestania_buttonActionPerformed

    private void SymbolsTable_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymbolsTable_buttonActionPerformed
        
        //letrero de que se ha generado el reporte
        JOptionPane.showMessageDialog(this, "Tabla de simbolos generada con exito");
        
        //abrir el archivo generado
        try {
            //String path = "Fase_1/Reports/Fails.html";
            String path = "tabla.html";
            File file = new File(path);
            java.awt.Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_SymbolsTable_buttonActionPerformed

    private void Go_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Go_buttonActionPerformed
        
        Salida.setText("");
        interprete.Parser parser;
        interprete.Lexer lexer;
        


        try{
            Fase_1.analizar(Entrada.getText(), Interfaz.this);
            
        }catch(Exception e){
            e.printStackTrace();
            StackTraceElement[] stackTrace = e.getStackTrace();
            if (stackTrace.length > 0) {
                StackTraceElement element = stackTrace[0];
                Salida.setText("Error en la clase: " + element.getClassName());
                Salida.setText("Error en el método: " + element.getMethodName());
                Salida.setText("Error en la línea: " + element.getLineNumber());
            } 
        }
    }//GEN-LAST:event_Go_buttonActionPerformed

    

    private void NewPestania_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewPestania_buttonActionPerformed
        // TODO add your handling code here:
        Interfaz nuevaPestania = new Interfaz();
        nuevaPestania.setVisible(true);
    }//GEN-LAST:event_NewPestania_buttonActionPerformed

    private void GuardarArchivo_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarArchivo_buttonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Archivo");
        int userSelection = fileChooser.showSaveDialog(this);

        if(userSelection == JFileChooser.APPROVE_OPTION){
            File fileToSave = fileChooser.getSelectedFile();
            Path ruta = Paths.get(fileToSave.getAbsolutePath());

            try{
                String contenido = Entrada.getText();
                Files.write(ruta, contenido.getBytes());
                archivoActual = fileToSave;
                JOptionPane.showMessageDialog(this, "Archivo guardado con exito");
            }catch(IOException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_GuardarArchivo_buttonActionPerformed

    private void Error_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Error_buttonActionPerformed
        
        //letrero de que se ha generado el reporte
        JOptionPane.showMessageDialog(this, "Reporte de errores generado con exito");

        //abrir el archivo generado
        try {
            //String path = "Fase_1/Reports/Fails.html";
            String path = "Fails.html";
            File file = new File(path);
            java.awt.Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_Error_buttonActionPerformed

    private void AST_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AST_buttonActionPerformed
            
            //letrero de que se ha generado el reporte
            JOptionPane.showMessageDialog(this, "AST generado con exito");
    
            //abrir el archivo generado
            try {
                //String path = "Fase_1/Reports/Fails.html";
                String path = "arbolAST.svg";
                File file = new File(path);
                java.awt.Desktop.getDesktop().open(file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_AST_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        //FlatDarkLaf.setup();
        FlatMacDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    public void appendConsola(String text){
        Salida.append(text);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AST_button;
    private javax.swing.JMenuItem AbrirArchivo_button;
    private javax.swing.JMenu Archivo_button;
    private javax.swing.JLabel ConsolaText;
    private javax.swing.JMenuItem DeletePestania_button;
    private javax.swing.JTextArea Entrada;
    private javax.swing.JLabel EntradaText;
    private javax.swing.JMenuItem Error_button;
    private javax.swing.JMenuItem Go_button;
    private javax.swing.JMenuItem GuardarArchivo_button;
    private javax.swing.JMenuItem NewPestania_button;
    private javax.swing.JMenuItem NuevoArchivo_button;
    private javax.swing.JMenu Pestania_button;
    private javax.swing.JMenu Reporte_button;
    private javax.swing.JMenu Run_button;
    private javax.swing.JTextArea Salida;
    private javax.swing.JMenuItem SymbolsTable_button;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
